services:
  migration-backend:
    image: golang:1.22.10
    depends_on:
      - migration-backend-worker
      - db-migration-backend
      - redis
      - signer-backend
    working_dir: /src
    volumes:
      - ./migration-backend:/src
      - go-build-cache:/root/.cache
      - go-mod-migration-backend:/go/pkg/mod
    ports:
      - "8091:8091"
    healthcheck:
      test: curl http://localhost:8091/healthz
      interval: 1s
      timeout: 1s
      retries: 30
    command: go run ./cmd/server

  migration-backend-worker:
    image: golang:1.22.10
    depends_on:
      - signer-backend
      - db-migration-backend
      - redis
      - migration-backend-scheduler
    working_dir: /src
    volumes:
      - ./migration-backend:/src
      - go-build-cache:/root/.cache
      - go-mod-migration-backend:/go/pkg/mod
    command: go run ./cmd/worker worker

  migration-backend-scheduler:
    image: golang:1.22.10
    depends_on:
      - redis
    working_dir: /src
    volumes:
      - ./migration-backend:/src
      - go-build-cache:/root/.cache
      - go-mod-migration-backend:/go/pkg/mod
    command: go run ./cmd/worker scheduler

  signer-backend:
    image: golang:1.23.0
    depends_on:
      - db-signer-backend
      - redis
      - eth-node
    working_dir: /src
    volumes:
      - ./signer-backend:/src
      - go-build-cache:/root/.cache
      - go-mod-signer-backend:/go/pkg/mod
    env_file: ./signer-backend/.env
    ports:
      - "8091"
    healthcheck:
      test: curl http://localhost:8091/healthz
      interval: 1s
      timeout: 1s
      retries: 30
    command: go run ./cmd/server

  eth-node:
    image: node:24-bookworm
    working_dir: /src
    volumes:
      - node-modules-eth-node:/src/node_modules
      - ./likenft/hardhat.config.ts:/src/hardhat.config.ts:ro
      - ./likenft/package.json:/src/package.json:ro
      - ./likenft/package-lock.json:/src/package-lock.json
      - ./likenft/tsconfig.json:/src/tsconfig.json:ro
    env_file: ./deploy/env.operator
    ports:
      - "8545:8545"
    healthcheck:
      test: "curl --silent --fail-with-body http://localhost:8545 -H \"Content-Type: application/json\" -d \"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"method\\\":\\\"eth_blockNumber\\\",\\\"params\\\":[],\\\"id\\\":1}\""
      interval: 1s
      timeout: 1s
      retries: 30
    command: /bin/sh -c "npm install && npx hardhat node"

  db-migration-backend:
    image: postgres:16
    volumes:
      - ./migration-backend/scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
      - db_data_migration_backend:/var/lib/postgresql/data
    restart: always
    env_file: ./migration-backend/.env
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -d $$DB_NAME -U $$DB_USER -p 5432 -h localhost
      interval: 1s
      timeout: 1s
      retries: 30

  db-signer-backend:
    image: postgres:16
    volumes:
      - ./signer-backend/scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
      - db_data_signer_backend:/var/lib/postgresql/data
    restart: always
    env_file: ./signer-backend/.env
    ports:
      - "5433:5432"
    healthcheck:
      test: pg_isready -d $$DB_NAME -U $$DB_USER -p 5432 -h localhost
      interval: 1s
      timeout: 1s
      retries: 30

  redis:
    image: redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - data:/data

volumes:
  go-build-cache:
    driver: local
  go-mod-migration-backend:
    driver: local
  go-mod-signer-backend:
    driver: local
  node-modules-eth-node:
    driver: local
  db_data_migration_backend:
    driver: local
  db_data_signer_backend:
    driver: local
  data:
    driver: local
