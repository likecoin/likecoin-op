// Code generated by ent, DO NOT EDIT.

package likeprotocol

import (
	"likenft-indexer/ent/schema/typeutil"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/schema/field"
)

const (
	// Label holds the string label denoting the likeprotocol type in the database.
	Label = "like_protocol"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldLatestEventBlockNumber holds the string denoting the latest_event_block_number field in the database.
	FieldLatestEventBlockNumber = "latest_event_block_number"
	// Table holds the table name of the likeprotocol in the database.
	Table = "like_protocols"
)

// Columns holds all SQL columns for likeprotocol fields.
var Columns = []string{
	FieldID,
	FieldAddress,
	FieldLatestEventBlockNumber,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// ValueScanner of all LikeProtocol fields.
	ValueScanner struct {
		LatestEventBlockNumber field.TypeValueScanner[typeutil.Uint64]
	}
)

// OrderOption defines the ordering options for the LikeProtocol queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByAddress orders the results by the address field.
func ByAddress(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAddress, opts...).ToFunc()
}

// ByLatestEventBlockNumber orders the results by the latest_event_block_number field.
func ByLatestEventBlockNumber(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLatestEventBlockNumber, opts...).ToFunc()
}
