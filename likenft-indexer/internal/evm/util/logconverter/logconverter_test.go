package logconverter_test

import (
	"testing"
	"time"

	"likenft-indexer/ent"
	"likenft-indexer/ent/evmevent"
	"likenft-indexer/internal/evm/book_nft"
	"likenft-indexer/internal/evm/like_protocol"
	"likenft-indexer/internal/evm/util/logconverter"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/common/hexutil"
	"github.com/ethereum/go-ethereum/core/types"
	. "github.com/smartystreets/goconvey/convey"
)

// These tests should fail if abi updated
func TestLogConverter(t *testing.T) {
	Convey("Convert Log to evm event", t, func() {
		log := types.Log{
			Address: common.HexToAddress("0x14CE6632272552E676b53FE6202edA8F1Be4992c"),
			Topics: []common.Hash{
				common.HexToHash("0xbd5c95affecf80a51b513bb4eddd42724421b80ef31b07cee1b5b25d8ce5a05b"),
				common.HexToHash("0x0000000000000000000000008626f6940e2eb28930efb4cef49b2d1f2c9c1199"),
				common.HexToHash("0x000000000000000000000000dd2fd4581271e230360230f9337d5c0430bf44c0"),
				common.HexToHash("0x0000000000000000000000000000000000000000000000000000000000000000"),
			},
			Data:        hexutil.MustDecode("0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000ad84c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e2050726f696e20717569732073656d7065722072697375732e2050656c6c656e74657371756520696e20616e7465206e756c6c612e20446f6e656320696e206e6973692065752075726e6120657569736d6f6420636f6e64696d656e74756d2e20496e746567657220696e20647569206f64696f2e2050686173656c6c75732076656c20656e696d20616320656c697420617563746f7220636f6e6775652e204d6f72626920766974616520636f6e73657175617420646f6c6f722c20756c74726963657320747269737469717565206e756c6c612e204d617572697320636f6e7365717561742061726375206e6563206c6f72656d20766573746962756c756d2c207175697320617563746f72206d6920696163756c69732e2043757261626974757220766976657272612076756c707574617465207472697374697175652e20536564206469676e697373696d2c2065726f73206567657420736f6c6c696369747564696e2074696e636964756e742c206d657475732065726f7320696e74657264756d2065726f732c2069642076756c707574617465206c656374757320746f72746f7220696420697073756d2e0a0a566976616d75732065676573746173206d692066656c69732c2065742073656d7065722065726f73206d616c6573756164612076697461652e204372617320717569732065726f732072686f6e6375732c20656c656966656e6420656c69742073697420616d65742c207361676974746973206e657175652e20536564206e6f6e206e657175652073617069656e2e204e756c6c616d20756c7472696369657320636f6d6d6f646f2066656c69732c206e6563207375736369706974206d61757269732e204e616d206e6563206469616d206d6f6c65737469652c20766573746962756c756d2065726f732061632c20656765737461732076656c69742e20416c697175616d206c6f626f72746973206a7573746f206567657420626c616e64697420696d706572646965742e20416c697175616d20666163696c697369732073617069656e207175697320696163756c697320617563746f722e205574206574206d616c65737561646120617263752c20617420706f73756572652076656c69742e20496e20656765742073656d2076756c7075746174652c206469676e697373696d2072697375732075742c20656c656966656e64206e756e632e205072616573656e742073697420616d6574206a7573746f20696420746f72746f7220636f6e76616c6c697320616363756d73616e20717569732073697420616d6574206c6f72656d2e205365642070757275732072697375732c20756c6c616d636f72706572206120656c6974206e65632c20626962656e64756d20706f7375657265206f7263692e0a0a53757370656e6469737365206174206e756c6c612073757363697069742c2073656d706572206c656f20717569732c206672696e67696c6c6120616e74652e20467573636520657420746f72746f72207363656c6572697371756520656e696d2065666669636974757220766f6c7574706174206e6f6e206964206c65637475732e204d6f72626920636f6e677565206a7573746f207669746165206a7573746f20737573636970697420766f6c75747061742e2053757370656e646973736520617563746f722065782061756775652e205175697371756520656c656966656e64206d617373612073697420616d6574206665726d656e74756d207472697374697175652e2046757363652071756973206e6571756520616363756d73616e2c20696e74657264756d20746f72746f722073697420616d65742c2074656d707573206c6f72656d2e205072616573656e7420757420656c656966656e64206475692c20617420617563746f72206e6973692e204e616d2068656e6472657269742064696374756d2068656e6472657269742e205574207472697374697175652c20697073756d20736564206c6f626f72746973206469676e697373696d2c20617263752065726174206d6f6c6c6973206475692c20757420736f64616c6573206a7573746f207175616d20696e206c656f2e20447569732061206c696265726f206575206e756c6c6120706c616365726174206c616f726565742e2050726f696e20657569736d6f6420696420726973757320696e20656765737461732e20446f6e65632069642066656c69732075742073656d206665726d656e74756d20756c6c616d636f727065722e20457469616d2074656d706f722c2073617069656e206567657420766573746962756c756d206c6f626f727469732c206d657475732074656c6c757320636f6e677565206e69736c2c2061206665726d656e74756d20697073756d206e69736920617420617263752e205365642076656c206e697369206e6f6e20656e696d20617563746f722064696374756d2e0a0a446f6e65632071756973207361676974746973206e6962682c20757420696163756c6973206d61757269732e2053656420756c7472696369657320736f64616c6573206c65637475732c2073656420766f6c757470617420746f72746f7220616c697175616d20612e2041656e65616e206c7563747573206c6967756c61206174206d6f6c65737469652072686f6e6375732e20566976616d757320696163756c69732064696374756d206475692c20696420616c69717565742065726174206d6178696d757320612e205365642074757270697320656c69742c20636f6e64696d656e74756d2061632072697375732076656c2c20626962656e64756d2074726973746971756520616e74652e2043726173206575207072657469756d20616e74652c206e6f6e2074696e636964756e74207475727069732e20566573746962756c756d2061206e6962682073697420616d657420697073756d20706861726574726120636f6e7365717561742061632076656c20656c69742e20446f6e656320656666696369747572206e697369206e656320616c697175657420616c69717565742e0a0a44756973206e6563206175677565206e657175652e20457469616d2076697665727261206174206d61676e61206163206f726e6172652e2043757261626974757220657420656c656966656e6420616e74652e20566573746962756c756d20696e74657264756d20636f6e736563746574757220616e7465206e65632070686172657472612e204d616563656e6173207361676974746973206c696265726f206c696265726f2c206120636f6e7365637465747572206e756e6320696e74657264756d20717569732e20457469616d206665756769617420657569736d6f6420656e696d2c207175697320656666696369747572206572617420677261766964612070756c76696e61722e204675736365206d6f6c6c697320626962656e64756d207175616d2c2071756973206c7563747573206172637520666163696c697369732061632e204e756c6c616d20756c747269636573206d6178696d7573206d692c207175697320636f6e64696d656e74756d206e69736c20706f7375657265206e65632e2053757370656e6469737365207072657469756d206e69736920657261742c2073656420756c7472696365732073656d20666163696c6973697320696e2e205365642076656c206a7573746f206475692e204d6f726269207363656c6572697371756520657820657420756c7472696365732073616769747469732e0000000000000000"),
			BlockNumber: 6,
			TxHash:      common.HexToHash("0xe63aa588e242d1824177b7462f8bcbd4be64c3c83fa76079f502efc606e80138"),
			TxIndex:     0,
			BlockHash:   common.HexToHash("0x9622bfcc079188be38b9f3d44062b27626f44df968aac51d498a2fc08fd6ab36"),
			Index:       1,
			Removed:     false,
		}

		abi, err := book_nft.BookNftMetaData.GetAbi()

		if err != nil {
			t.Error(err)
		}

		logConverter := logconverter.NewLogConverter(abi)
		evmEvent, err := logConverter.ConvertLogToEvmEvent(log)

		if err != nil {
			t.Error(err)
		}

		So(evmEvent.Address, ShouldEqual, "0x14CE6632272552E676b53FE6202edA8F1Be4992c")
		So(evmEvent.BlockHash, ShouldEqual, "0x9622bfcc079188be38b9f3d44062b27626f44df968aac51d498a2fc08fd6ab36")
		So(evmEvent.BlockNumber, ShouldEqual, 6)
		So(*evmEvent.Data, ShouldEqual, "memo:Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin quis semper risus. Pellentesque in ante nulla. Donec in nisi eu urna euismod condimentum. Integer in dui odio. Phasellus vel enim ac elit auctor congue. Morbi vitae consequat dolor, ultrices tristique nulla. Mauris consequat arcu nec lorem vestibulum, quis auctor mi iaculis. Curabitur viverra vulputate tristique. Sed dignissim, eros eget sollicitudin tincidunt, metus eros interdum eros, id vulputate lectus tortor id ipsum.\n\nVivamus egestas mi felis, et semper eros malesuada vitae. Cras quis eros rhoncus, eleifend elit sit amet, sagittis neque. Sed non neque sapien. Nullam ultricies commodo felis, nec suscipit mauris. Nam nec diam molestie, vestibulum eros ac, egestas velit. Aliquam lobortis justo eget blandit imperdiet. Aliquam facilisis sapien quis iaculis auctor. Ut et malesuada arcu, at posuere velit. In eget sem vulputate, dignissim risus ut, eleifend nunc. Praesent sit amet justo id tortor convallis accumsan quis sit amet lorem. Sed purus risus, ullamcorper a elit nec, bibendum posuere orci.\n\nSuspendisse at nulla suscipit, semper leo quis, fringilla ante. Fusce et tortor scelerisque enim efficitur volutpat non id lectus. Morbi congue justo vitae justo suscipit volutpat. Suspendisse auctor ex augue. Quisque eleifend massa sit amet fermentum tristique. Fusce quis neque accumsan, interdum tortor sit amet, tempus lorem. Praesent ut eleifend dui, at auctor nisi. Nam hendrerit dictum hendrerit. Ut tristique, ipsum sed lobortis dignissim, arcu erat mollis dui, ut sodales justo quam in leo. Duis a libero eu nulla placerat laoreet. Proin euismod id risus in egestas. Donec id felis ut sem fermentum ullamcorper. Etiam tempor, sapien eget vestibulum lobortis, metus tellus congue nisl, a fermentum ipsum nisi at arcu. Sed vel nisi non enim auctor dictum.\n\nDonec quis sagittis nibh, ut iaculis mauris. Sed ultricies sodales lectus, sed volutpat tortor aliquam a. Aenean luctus ligula at molestie rhoncus. Vivamus iaculis dictum dui, id aliquet erat maximus a. Sed turpis elit, condimentum ac risus vel, bibendum tristique ante. Cras eu pretium ante, non tincidunt turpis. Vestibulum a nibh sit amet ipsum pharetra consequat ac vel elit. Donec efficitur nisi nec aliquet aliquet.\n\nDuis nec augue neque. Etiam viverra at magna ac ornare. Curabitur et eleifend ante. Vestibulum interdum consectetur ante nec pharetra. Maecenas sagittis libero libero, a consectetur nunc interdum quis. Etiam feugiat euismod enim, quis efficitur erat gravida pulvinar. Fusce mollis bibendum quam, quis luctus arcu facilisis ac. Nullam ultrices maximus mi, quis condimentum nisl posuere nec. Suspendisse pretium nisi erat, sed ultrices sem facilisis in. Sed vel justo dui. Morbi scelerisque ex et ultrices sagittis.")
		So(*evmEvent.DataHex, ShouldEqual, "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000ad84c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e2050726f696e20717569732073656d7065722072697375732e2050656c6c656e74657371756520696e20616e7465206e756c6c612e20446f6e656320696e206e6973692065752075726e6120657569736d6f6420636f6e64696d656e74756d2e20496e746567657220696e20647569206f64696f2e2050686173656c6c75732076656c20656e696d20616320656c697420617563746f7220636f6e6775652e204d6f72626920766974616520636f6e73657175617420646f6c6f722c20756c74726963657320747269737469717565206e756c6c612e204d617572697320636f6e7365717561742061726375206e6563206c6f72656d20766573746962756c756d2c207175697320617563746f72206d6920696163756c69732e2043757261626974757220766976657272612076756c707574617465207472697374697175652e20536564206469676e697373696d2c2065726f73206567657420736f6c6c696369747564696e2074696e636964756e742c206d657475732065726f7320696e74657264756d2065726f732c2069642076756c707574617465206c656374757320746f72746f7220696420697073756d2e0a0a566976616d75732065676573746173206d692066656c69732c2065742073656d7065722065726f73206d616c6573756164612076697461652e204372617320717569732065726f732072686f6e6375732c20656c656966656e6420656c69742073697420616d65742c207361676974746973206e657175652e20536564206e6f6e206e657175652073617069656e2e204e756c6c616d20756c7472696369657320636f6d6d6f646f2066656c69732c206e6563207375736369706974206d61757269732e204e616d206e6563206469616d206d6f6c65737469652c20766573746962756c756d2065726f732061632c20656765737461732076656c69742e20416c697175616d206c6f626f72746973206a7573746f206567657420626c616e64697420696d706572646965742e20416c697175616d20666163696c697369732073617069656e207175697320696163756c697320617563746f722e205574206574206d616c65737561646120617263752c20617420706f73756572652076656c69742e20496e20656765742073656d2076756c7075746174652c206469676e697373696d2072697375732075742c20656c656966656e64206e756e632e205072616573656e742073697420616d6574206a7573746f20696420746f72746f7220636f6e76616c6c697320616363756d73616e20717569732073697420616d6574206c6f72656d2e205365642070757275732072697375732c20756c6c616d636f72706572206120656c6974206e65632c20626962656e64756d20706f7375657265206f7263692e0a0a53757370656e6469737365206174206e756c6c612073757363697069742c2073656d706572206c656f20717569732c206672696e67696c6c6120616e74652e20467573636520657420746f72746f72207363656c6572697371756520656e696d2065666669636974757220766f6c7574706174206e6f6e206964206c65637475732e204d6f72626920636f6e677565206a7573746f207669746165206a7573746f20737573636970697420766f6c75747061742e2053757370656e646973736520617563746f722065782061756775652e205175697371756520656c656966656e64206d617373612073697420616d6574206665726d656e74756d207472697374697175652e2046757363652071756973206e6571756520616363756d73616e2c20696e74657264756d20746f72746f722073697420616d65742c2074656d707573206c6f72656d2e205072616573656e7420757420656c656966656e64206475692c20617420617563746f72206e6973692e204e616d2068656e6472657269742064696374756d2068656e6472657269742e205574207472697374697175652c20697073756d20736564206c6f626f72746973206469676e697373696d2c20617263752065726174206d6f6c6c6973206475692c20757420736f64616c6573206a7573746f207175616d20696e206c656f2e20447569732061206c696265726f206575206e756c6c6120706c616365726174206c616f726565742e2050726f696e20657569736d6f6420696420726973757320696e20656765737461732e20446f6e65632069642066656c69732075742073656d206665726d656e74756d20756c6c616d636f727065722e20457469616d2074656d706f722c2073617069656e206567657420766573746962756c756d206c6f626f727469732c206d657475732074656c6c757320636f6e677565206e69736c2c2061206665726d656e74756d20697073756d206e69736920617420617263752e205365642076656c206e697369206e6f6e20656e696d20617563746f722064696374756d2e0a0a446f6e65632071756973207361676974746973206e6962682c20757420696163756c6973206d61757269732e2053656420756c7472696369657320736f64616c6573206c65637475732c2073656420766f6c757470617420746f72746f7220616c697175616d20612e2041656e65616e206c7563747573206c6967756c61206174206d6f6c65737469652072686f6e6375732e20566976616d757320696163756c69732064696374756d206475692c20696420616c69717565742065726174206d6178696d757320612e205365642074757270697320656c69742c20636f6e64696d656e74756d2061632072697375732076656c2c20626962656e64756d2074726973746971756520616e74652e2043726173206575207072657469756d20616e74652c206e6f6e2074696e636964756e74207475727069732e20566573746962756c756d2061206e6962682073697420616d657420697073756d20706861726574726120636f6e7365717561742061632076656c20656c69742e20446f6e656320656666696369747572206e697369206e656320616c697175657420616c69717565742e0a0a44756973206e6563206175677565206e657175652e20457469616d2076697665727261206174206d61676e61206163206f726e6172652e2043757261626974757220657420656c656966656e6420616e74652e20566573746962756c756d20696e74657264756d20636f6e736563746574757220616e7465206e65632070686172657472612e204d616563656e6173207361676974746973206c696265726f206c696265726f2c206120636f6e7365637465747572206e756e6320696e74657264756d20717569732e20457469616d206665756769617420657569736d6f6420656e696d2c207175697320656666696369747572206572617420677261766964612070756c76696e61722e204675736365206d6f6c6c697320626962656e64756d207175616d2c2071756973206c7563747573206172637520666163696c697369732061632e204e756c6c616d20756c747269636573206d6178696d7573206d692c207175697320636f6e64696d656e74756d206e69736c20706f7375657265206e65632e2053757370656e6469737365207072657469756d206e69736920657261742c2073656420756c7472696365732073656d20666163696c6973697320696e2e205365642076656c206a7573746f206475692e204d6f726269207363656c6572697371756520657820657420756c7472696365732073616769747469732e0000000000000000")
		So(evmEvent.ID, ShouldEqual, 0)
		So(evmEvent.LogIndex, ShouldEqual, 1)
		So(evmEvent.Removed, ShouldEqual, false)
		So(evmEvent.Status, ShouldEqual, evmevent.StatusReceived)
		So(evmEvent.Topic0, ShouldEqual, "TransferWithMemo")
		So(evmEvent.Topic0Hex, ShouldEqual, "0xbd5c95affecf80a51b513bb4eddd42724421b80ef31b07cee1b5b25d8ce5a05b")
		So(*evmEvent.Topic1, ShouldEqual, "0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199")
		So(*evmEvent.Topic1Hex, ShouldEqual, "0x0000000000000000000000008626f6940e2eb28930efb4cef49b2d1f2c9c1199")
		So(*evmEvent.Topic2, ShouldEqual, "0xdD2FD4581271e230360230F9337D5c0430Bf44C0")
		So(*evmEvent.Topic2Hex, ShouldEqual, "0x000000000000000000000000dd2fd4581271e230360230f9337d5c0430bf44c0")
		So(*evmEvent.Topic3, ShouldEqual, "0")
		So(*evmEvent.Topic3Hex, ShouldEqual, "0x0000000000000000000000000000000000000000000000000000000000000000")
		So(evmEvent.TransactionHash, ShouldEqual, "0xe63aa588e242d1824177b7462f8bcbd4be64c3c83fa76079f502efc606e80138")
		So(evmEvent.TransactionIndex, ShouldEqual, 0)
	})

	Convey("Convert Log to evm event no data", t, func() {
		log := types.Log{
			Address: common.HexToAddress("0x14CE6632272552E676b53FE6202edA8F1Be4992c"),
			Topics: []common.Hash{
				common.HexToHash("0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"),
				common.HexToHash("0x0000000000000000000000008626f6940e2eb28930efb4cef49b2d1f2c9c1199"),
				common.HexToHash("0x000000000000000000000000dd2fd4581271e230360230f9337d5c0430bf44c0"),
			},
			Data:        nil,
			BlockNumber: 6,
			TxHash:      common.HexToHash("0xd25171beed603fb18a13636a8a24b0a6e843ec2937b3abd8d295e0f4fd9a1833"),
			TxIndex:     0,
			BlockHash:   common.HexToHash("0x2b7c406b6d84baca7e14d35cdbd7728e63622729f5ab736290a990ed9a09f41e"),
			Index:       1,
			Removed:     false,
		}

		abi, err := book_nft.BookNftMetaData.GetAbi()

		if err != nil {
			t.Error(err)
		}

		logConverter := logconverter.NewLogConverter(abi)
		evmEvent, err := logConverter.ConvertLogToEvmEvent(log)

		if err != nil {
			t.Error(err)
		}

		So(evmEvent.Address, ShouldEqual, "0x14CE6632272552E676b53FE6202edA8F1Be4992c")
		So(evmEvent.BlockHash, ShouldEqual, "0x2b7c406b6d84baca7e14d35cdbd7728e63622729f5ab736290a990ed9a09f41e")
		So(evmEvent.BlockNumber, ShouldEqual, 6)
		So(evmEvent.Data, ShouldBeNil)
		So(evmEvent.DataHex, ShouldBeNil)
		So(evmEvent.ID, ShouldEqual, 0)
		So(evmEvent.LogIndex, ShouldEqual, 1)
		So(evmEvent.Removed, ShouldEqual, false)
		So(evmEvent.Status, ShouldEqual, evmevent.StatusReceived)
		So(evmEvent.Topic0, ShouldEqual, "OwnershipTransferred")
		So(evmEvent.Topic0Hex, ShouldEqual, "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0")
		So(*evmEvent.Topic1, ShouldEqual, "0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199")
		So(*evmEvent.Topic1Hex, ShouldEqual, "0x0000000000000000000000008626f6940e2eb28930efb4cef49b2d1f2c9c1199")
		So(*evmEvent.Topic2, ShouldEqual, "0xdD2FD4581271e230360230F9337D5c0430Bf44C0")
		So(*evmEvent.Topic2Hex, ShouldEqual, "0x000000000000000000000000dd2fd4581271e230360230f9337d5c0430bf44c0")
		So(evmEvent.Topic3, ShouldBeNil)
		So(evmEvent.Topic3Hex, ShouldBeNil)
		So(evmEvent.TransactionHash, ShouldEqual, "0xd25171beed603fb18a13636a8a24b0a6e843ec2937b3abd8d295e0f4fd9a1833")
		So(evmEvent.TransactionIndex, ShouldEqual, 0)
	})

	Convey("Convert evmEvent to Log", t, func() {
		ptr := func(s string) *string { return &s }
		evmEvent := ent.EVMEvent{
			ID:               0,
			TransactionHash:  "0xe63aa588e242d1824177b7462f8bcbd4be64c3c83fa76079f502efc606e80138",
			TransactionIndex: 0,
			BlockHash:        "0x9622bfcc079188be38b9f3d44062b27626f44df968aac51d498a2fc08fd6ab36",
			BlockNumber:      6,
			LogIndex:         1,
			Address:          "0x14CE6632272552E676b53FE6202edA8F1Be4992c",
			Topic0:           "TransferWithMemo",
			Topic0Hex:        "0xbd5c95affecf80a51b513bb4eddd42724421b80ef31b07cee1b5b25d8ce5a05b",
			Topic1:           ptr("0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199"),
			Topic1Hex:        ptr("0x0000000000000000000000008626f6940e2eb28930efb4cef49b2d1f2c9c1199"),
			Topic2:           ptr("0xdD2FD4581271e230360230F9337D5c0430Bf44C0"),
			Topic2Hex:        ptr("0x000000000000000000000000dd2fd4581271e230360230f9337d5c0430bf44c0"),
			Topic3:           ptr("0"),
			Topic3Hex:        ptr("0x0000000000000000000000000000000000000000000000000000000000000000"),
			Data:             ptr("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin quis semper risus. Pellentesque in ante nulla. Donec in nisi eu urna euismod condimentum. Integer in dui odio. Phasellus vel enim ac elit auctor congue. Morbi vitae consequat dolor, ultrices tristique nulla. Mauris consequat arcu nec lorem vestibulum, quis auctor mi iaculis. Curabitur viverra vulputate tristique. Sed dignissim, eros eget sollicitudin tincidunt, metus eros interdum eros, id vulputate lectus tortor id ipsum.\n\nVivamus egestas mi felis, et semper eros malesuada vitae. Cras quis eros rhoncus, eleifend elit sit amet, sagittis neque. Sed non neque sapien. Nullam ultricies commodo felis, nec suscipit mauris. Nam nec diam molestie, vestibulum eros ac, egestas velit. Aliquam lobortis justo eget blandit imperdiet. Aliquam facilisis sapien quis iaculis auctor. Ut et malesuada arcu, at posuere velit. In eget sem vulputate, dignissim risus ut, eleifend nunc. Praesent sit amet justo id tortor convallis accumsan quis sit amet lorem. Sed purus risus, ullamcorper a elit nec, bibendum posuere orci.\n\nSuspendisse at nulla suscipit, semper leo quis, fringilla ante. Fusce et tortor scelerisque enim efficitur volutpat non id lectus. Morbi congue justo vitae justo suscipit volutpat. Suspendisse auctor ex augue. Quisque eleifend massa sit amet fermentum tristique. Fusce quis neque accumsan, interdum tortor sit amet, tempus lorem. Praesent ut eleifend dui, at auctor nisi. Nam hendrerit dictum hendrerit. Ut tristique, ipsum sed lobortis dignissim, arcu erat mollis dui, ut sodales justo quam in leo. Duis a libero eu nulla placerat laoreet. Proin euismod id risus in egestas. Donec id felis ut sem fermentum ullamcorper. Etiam tempor, sapien eget vestibulum lobortis, metus tellus congue nisl, a fermentum ipsum nisi at arcu. Sed vel nisi non enim auctor dictum.\n\nDonec quis sagittis nibh, ut iaculis mauris. Sed ultricies sodales lectus, sed volutpat tortor aliquam a. Aenean luctus ligula at molestie rhoncus. Vivamus iaculis dictum dui, id aliquet erat maximus a. Sed turpis elit, condimentum ac risus vel, bibendum tristique ante. Cras eu pretium ante, non tincidunt turpis. Vestibulum a nibh sit amet ipsum pharetra consequat ac vel elit. Donec efficitur nisi nec aliquet aliquet.\n\nDuis nec augue neque. Etiam viverra at magna ac ornare. Curabitur et eleifend ante. Vestibulum interdum consectetur ante nec pharetra. Maecenas sagittis libero libero, a consectetur nunc interdum quis. Etiam feugiat euismod enim, quis efficitur erat gravida pulvinar. Fusce mollis bibendum quam, quis luctus arcu facilisis ac. Nullam ultrices maximus mi, quis condimentum nisl posuere nec. Suspendisse pretium nisi erat, sed ultrices sem facilisis in. Sed vel justo dui. Morbi scelerisque ex et ultrices sagittis."),
			DataHex:          ptr("0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000ad84c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e2050726f696e20717569732073656d7065722072697375732e2050656c6c656e74657371756520696e20616e7465206e756c6c612e20446f6e656320696e206e6973692065752075726e6120657569736d6f6420636f6e64696d656e74756d2e20496e746567657220696e20647569206f64696f2e2050686173656c6c75732076656c20656e696d20616320656c697420617563746f7220636f6e6775652e204d6f72626920766974616520636f6e73657175617420646f6c6f722c20756c74726963657320747269737469717565206e756c6c612e204d617572697320636f6e7365717561742061726375206e6563206c6f72656d20766573746962756c756d2c207175697320617563746f72206d6920696163756c69732e2043757261626974757220766976657272612076756c707574617465207472697374697175652e20536564206469676e697373696d2c2065726f73206567657420736f6c6c696369747564696e2074696e636964756e742c206d657475732065726f7320696e74657264756d2065726f732c2069642076756c707574617465206c656374757320746f72746f7220696420697073756d2e0a0a566976616d75732065676573746173206d692066656c69732c2065742073656d7065722065726f73206d616c6573756164612076697461652e204372617320717569732065726f732072686f6e6375732c20656c656966656e6420656c69742073697420616d65742c207361676974746973206e657175652e20536564206e6f6e206e657175652073617069656e2e204e756c6c616d20756c7472696369657320636f6d6d6f646f2066656c69732c206e6563207375736369706974206d61757269732e204e616d206e6563206469616d206d6f6c65737469652c20766573746962756c756d2065726f732061632c20656765737461732076656c69742e20416c697175616d206c6f626f72746973206a7573746f206567657420626c616e64697420696d706572646965742e20416c697175616d20666163696c697369732073617069656e207175697320696163756c697320617563746f722e205574206574206d616c65737561646120617263752c20617420706f73756572652076656c69742e20496e20656765742073656d2076756c7075746174652c206469676e697373696d2072697375732075742c20656c656966656e64206e756e632e205072616573656e742073697420616d6574206a7573746f20696420746f72746f7220636f6e76616c6c697320616363756d73616e20717569732073697420616d6574206c6f72656d2e205365642070757275732072697375732c20756c6c616d636f72706572206120656c6974206e65632c20626962656e64756d20706f7375657265206f7263692e0a0a53757370656e6469737365206174206e756c6c612073757363697069742c2073656d706572206c656f20717569732c206672696e67696c6c6120616e74652e20467573636520657420746f72746f72207363656c6572697371756520656e696d2065666669636974757220766f6c7574706174206e6f6e206964206c65637475732e204d6f72626920636f6e677565206a7573746f207669746165206a7573746f20737573636970697420766f6c75747061742e2053757370656e646973736520617563746f722065782061756775652e205175697371756520656c656966656e64206d617373612073697420616d6574206665726d656e74756d207472697374697175652e2046757363652071756973206e6571756520616363756d73616e2c20696e74657264756d20746f72746f722073697420616d65742c2074656d707573206c6f72656d2e205072616573656e7420757420656c656966656e64206475692c20617420617563746f72206e6973692e204e616d2068656e6472657269742064696374756d2068656e6472657269742e205574207472697374697175652c20697073756d20736564206c6f626f72746973206469676e697373696d2c20617263752065726174206d6f6c6c6973206475692c20757420736f64616c6573206a7573746f207175616d20696e206c656f2e20447569732061206c696265726f206575206e756c6c6120706c616365726174206c616f726565742e2050726f696e20657569736d6f6420696420726973757320696e20656765737461732e20446f6e65632069642066656c69732075742073656d206665726d656e74756d20756c6c616d636f727065722e20457469616d2074656d706f722c2073617069656e206567657420766573746962756c756d206c6f626f727469732c206d657475732074656c6c757320636f6e677565206e69736c2c2061206665726d656e74756d20697073756d206e69736920617420617263752e205365642076656c206e697369206e6f6e20656e696d20617563746f722064696374756d2e0a0a446f6e65632071756973207361676974746973206e6962682c20757420696163756c6973206d61757269732e2053656420756c7472696369657320736f64616c6573206c65637475732c2073656420766f6c757470617420746f72746f7220616c697175616d20612e2041656e65616e206c7563747573206c6967756c61206174206d6f6c65737469652072686f6e6375732e20566976616d757320696163756c69732064696374756d206475692c20696420616c69717565742065726174206d6178696d757320612e205365642074757270697320656c69742c20636f6e64696d656e74756d2061632072697375732076656c2c20626962656e64756d2074726973746971756520616e74652e2043726173206575207072657469756d20616e74652c206e6f6e2074696e636964756e74207475727069732e20566573746962756c756d2061206e6962682073697420616d657420697073756d20706861726574726120636f6e7365717561742061632076656c20656c69742e20446f6e656320656666696369747572206e697369206e656320616c697175657420616c69717565742e0a0a44756973206e6563206175677565206e657175652e20457469616d2076697665727261206174206d61676e61206163206f726e6172652e2043757261626974757220657420656c656966656e6420616e74652e20566573746962756c756d20696e74657264756d20636f6e736563746574757220616e7465206e65632070686172657472612e204d616563656e6173207361676974746973206c696265726f206c696265726f2c206120636f6e7365637465747572206e756e6320696e74657264756d20717569732e20457469616d206665756769617420657569736d6f6420656e696d2c207175697320656666696369747572206572617420677261766964612070756c76696e61722e204675736365206d6f6c6c697320626962656e64756d207175616d2c2071756973206c7563747573206172637520666163696c697369732061632e204e756c6c616d20756c747269636573206d6178696d7573206d692c207175697320636f6e64696d656e74756d206e69736c20706f7375657265206e65632e2053757370656e6469737365207072657469756d206e69736920657261742c2073656420756c7472696365732073656d20666163696c6973697320696e2e205365642076656c206a7573746f206475692e204d6f726269207363656c6572697371756520657820657420756c7472696365732073616769747469732e0000000000000000"),
			Removed:          false,
			Status:           evmevent.StatusReceived,
			FailedReason:     nil,
			Timestamp:        time.Now(),
		}

		abi, err := book_nft.BookNftMetaData.GetAbi()

		if err != nil {
			t.Error(err)
		}

		logConverter := logconverter.NewLogConverter(abi)

		log := logConverter.ConvertEvmEventToLog(&evmEvent)

		So(log.Address, ShouldEqual, common.HexToAddress("0x14CE6632272552E676b53FE6202edA8F1Be4992c"))
		So(log.BlockHash, ShouldEqual, common.HexToHash("0x9622bfcc079188be38b9f3d44062b27626f44df968aac51d498a2fc08fd6ab36"))
		So(log.BlockNumber, ShouldEqual, 6)
		So(log.Data, ShouldEqual, hexutil.MustDecode("0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000ad84c6f72656d20697073756d20646f6c6f722073697420616d65742c20636f6e73656374657475722061646970697363696e6720656c69742e2050726f696e20717569732073656d7065722072697375732e2050656c6c656e74657371756520696e20616e7465206e756c6c612e20446f6e656320696e206e6973692065752075726e6120657569736d6f6420636f6e64696d656e74756d2e20496e746567657220696e20647569206f64696f2e2050686173656c6c75732076656c20656e696d20616320656c697420617563746f7220636f6e6775652e204d6f72626920766974616520636f6e73657175617420646f6c6f722c20756c74726963657320747269737469717565206e756c6c612e204d617572697320636f6e7365717561742061726375206e6563206c6f72656d20766573746962756c756d2c207175697320617563746f72206d6920696163756c69732e2043757261626974757220766976657272612076756c707574617465207472697374697175652e20536564206469676e697373696d2c2065726f73206567657420736f6c6c696369747564696e2074696e636964756e742c206d657475732065726f7320696e74657264756d2065726f732c2069642076756c707574617465206c656374757320746f72746f7220696420697073756d2e0a0a566976616d75732065676573746173206d692066656c69732c2065742073656d7065722065726f73206d616c6573756164612076697461652e204372617320717569732065726f732072686f6e6375732c20656c656966656e6420656c69742073697420616d65742c207361676974746973206e657175652e20536564206e6f6e206e657175652073617069656e2e204e756c6c616d20756c7472696369657320636f6d6d6f646f2066656c69732c206e6563207375736369706974206d61757269732e204e616d206e6563206469616d206d6f6c65737469652c20766573746962756c756d2065726f732061632c20656765737461732076656c69742e20416c697175616d206c6f626f72746973206a7573746f206567657420626c616e64697420696d706572646965742e20416c697175616d20666163696c697369732073617069656e207175697320696163756c697320617563746f722e205574206574206d616c65737561646120617263752c20617420706f73756572652076656c69742e20496e20656765742073656d2076756c7075746174652c206469676e697373696d2072697375732075742c20656c656966656e64206e756e632e205072616573656e742073697420616d6574206a7573746f20696420746f72746f7220636f6e76616c6c697320616363756d73616e20717569732073697420616d6574206c6f72656d2e205365642070757275732072697375732c20756c6c616d636f72706572206120656c6974206e65632c20626962656e64756d20706f7375657265206f7263692e0a0a53757370656e6469737365206174206e756c6c612073757363697069742c2073656d706572206c656f20717569732c206672696e67696c6c6120616e74652e20467573636520657420746f72746f72207363656c6572697371756520656e696d2065666669636974757220766f6c7574706174206e6f6e206964206c65637475732e204d6f72626920636f6e677565206a7573746f207669746165206a7573746f20737573636970697420766f6c75747061742e2053757370656e646973736520617563746f722065782061756775652e205175697371756520656c656966656e64206d617373612073697420616d6574206665726d656e74756d207472697374697175652e2046757363652071756973206e6571756520616363756d73616e2c20696e74657264756d20746f72746f722073697420616d65742c2074656d707573206c6f72656d2e205072616573656e7420757420656c656966656e64206475692c20617420617563746f72206e6973692e204e616d2068656e6472657269742064696374756d2068656e6472657269742e205574207472697374697175652c20697073756d20736564206c6f626f72746973206469676e697373696d2c20617263752065726174206d6f6c6c6973206475692c20757420736f64616c6573206a7573746f207175616d20696e206c656f2e20447569732061206c696265726f206575206e756c6c6120706c616365726174206c616f726565742e2050726f696e20657569736d6f6420696420726973757320696e20656765737461732e20446f6e65632069642066656c69732075742073656d206665726d656e74756d20756c6c616d636f727065722e20457469616d2074656d706f722c2073617069656e206567657420766573746962756c756d206c6f626f727469732c206d657475732074656c6c757320636f6e677565206e69736c2c2061206665726d656e74756d20697073756d206e69736920617420617263752e205365642076656c206e697369206e6f6e20656e696d20617563746f722064696374756d2e0a0a446f6e65632071756973207361676974746973206e6962682c20757420696163756c6973206d61757269732e2053656420756c7472696369657320736f64616c6573206c65637475732c2073656420766f6c757470617420746f72746f7220616c697175616d20612e2041656e65616e206c7563747573206c6967756c61206174206d6f6c65737469652072686f6e6375732e20566976616d757320696163756c69732064696374756d206475692c20696420616c69717565742065726174206d6178696d757320612e205365642074757270697320656c69742c20636f6e64696d656e74756d2061632072697375732076656c2c20626962656e64756d2074726973746971756520616e74652e2043726173206575207072657469756d20616e74652c206e6f6e2074696e636964756e74207475727069732e20566573746962756c756d2061206e6962682073697420616d657420697073756d20706861726574726120636f6e7365717561742061632076656c20656c69742e20446f6e656320656666696369747572206e697369206e656320616c697175657420616c69717565742e0a0a44756973206e6563206175677565206e657175652e20457469616d2076697665727261206174206d61676e61206163206f726e6172652e2043757261626974757220657420656c656966656e6420616e74652e20566573746962756c756d20696e74657264756d20636f6e736563746574757220616e7465206e65632070686172657472612e204d616563656e6173207361676974746973206c696265726f206c696265726f2c206120636f6e7365637465747572206e756e6320696e74657264756d20717569732e20457469616d206665756769617420657569736d6f6420656e696d2c207175697320656666696369747572206572617420677261766964612070756c76696e61722e204675736365206d6f6c6c697320626962656e64756d207175616d2c2071756973206c7563747573206172637520666163696c697369732061632e204e756c6c616d20756c747269636573206d6178696d7573206d692c207175697320636f6e64696d656e74756d206e69736c20706f7375657265206e65632e2053757370656e6469737365207072657469756d206e69736920657261742c2073656420756c7472696365732073656d20666163696c6973697320696e2e205365642076656c206a7573746f206475692e204d6f726269207363656c6572697371756520657820657420756c7472696365732073616769747469732e0000000000000000"))
		So(log.Index, ShouldEqual, 1)
		So(log.Removed, ShouldEqual, false)
		So(log.Topics, ShouldEqual, []common.Hash{
			common.HexToHash("0xbd5c95affecf80a51b513bb4eddd42724421b80ef31b07cee1b5b25d8ce5a05b"),
			common.HexToHash("0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199"),
			common.HexToHash("0xdD2FD4581271e230360230F9337D5c0430Bf44C0"),
			common.HexToHash("0x0000000000000000000000000000000000000000000000000000000000000000"),
		})
		So(log.TxHash, ShouldEqual, common.HexToHash("0xe63aa588e242d1824177b7462f8bcbd4be64c3c83fa76079f502efc606e80138"))
		So(log.TxIndex, ShouldEqual, 0)
	})

	Convey("Parse NewBookNFT Log", t, func() {
		abi, err := like_protocol.LikeProtocolMetaData.GetAbi()

		if err != nil {
			t.Error(err)
		}

		logConverter := logconverter.NewLogConverter(abi)

		log := types.Log{
			Address: common.HexToAddress("0xB581C9264f59BF0289fA76D61B2D0746dCE3C30D"),
			Topics: []common.Hash{
				common.HexToHash("0xac1baa76250109980b8de5e2b9fcb185acd2bd5127c85c3e83cc05fb3aae5df8"),
			},
			Data:        hexutil.MustDecode("0x00000000000000000000000014ce6632272552e676b53fe6202eda8f1be4992c0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003ee3808ae68980e8ac82e3808ce68891e4b88de68a95e8b387e3808defbc8ce5b0b1e698af20616c6c20696e20e59ca8e6b395e5ae9ae8b2a8e5b9a3e3808b00000000000000000000000000000000000000000000000000000000000000000004424f4f4b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004417b226e616d65223a22e3808ae68980e8ac82e3808ce68891e4b88de68a95e8b387e3808defbc8ce5b0b1e698af20616c6c20696e20e59ca8e6b395e5ae9ae8b2a8e5b9a3e3808b222c2273796d626f6c223a22424f4f4b222c226465736372697074696f6e223a22e8b3bce8b2b7e69cace69bb8e69c83e9808fe9818ee983b5e4bbb6e694b6e588b0206570756220e5928c2070646620e6aa94efbc8ce5908ce69982e5be97e588b0e68f9be9a098e69cace69bb8204e465420e79a84e8b387e6a0bce38082e69bb8e79a84206570756220e5928c2070646620e6ada1e8bf8ee8bd89e799bce7b5a6e69c8be58f8befbc8ce8ae93e69bb4e5a49ae4babae78db2e5be97e79bb8e9979ce79fa5e8ad98e38082e69c89e588a5e696bce7b2b5e8aa9ee4b8ade3808ce7bfbbe78988e3808de79a84e58e9fe6848fefbc8ce3808ce7bfbbe78988e3808de4b88de698afe3808ce79b9ce78988e3808defbc8ce4b8a6e4b88de98195e6b395e380825c6ee784b6e8808cefbc8ce7bfbbe78988e99b96e784b6e4b88de698afe79b9ce78988efbc8ce58dbbe4b99fe4b88de698afe6ada3e78988e38082e594afe69c89204e465420e79a84e68c81e69c89e88085efbc8ce6898be4b88ae79a84206570756220e5928c2070646620e6898de698afe6ada3e78988e38082e8b3bce8b2b7e6ada3e78988e698afe4b880e4bbbde7be8ee5beb7efbc8ce698afe883bde58a9be68980e58f8ae79a84e8ae80e88085e8a9b2e4bb98e587bae79a84e4b880e9bb9ee689bfe69394efbc8ce4bba3e8a1a8e89197e5b08de4bd9ce88085e79a84e694afe68c81efbc8ce5b08de79fa5e8ad98e38081e5a0b1e98193e5928ce589b5e4bd9ce79a84e5b08ae9878de380825c6ee7bfbbe78988e698afe582b3e692adefbc8ce6ada3e78988e698afe68789e68fb4efbc9be582b3e692ade79a84e5908ce69982efbc8ce4b88de8a681e5bf98e4ba86e9bc93e58bb5e5b08de696b9e8b3bce8b2b7e6ada3e78988efbc8ce8ae93e6ada3e5bfb52070617920697420666f7277617264e380825c6ee9bc93e58bb5e6ada3e78988efbc8ce58581e8a8b1e7bfbbe78988efbc8ce6b688e6bb85e79b9ce78988efbc8ce698afe3808ae68980e8ac82e3808ce68891e4b88de68a95e8b387e3808defbc8ce5b0b1e698af20616c6c20696e20e59ca8e6b395e5ae9ae8b2a8e5b9a3e3808be58886e695a3e5bc8fe587bae78988e79a84e6a0b8e5bf83e79086e5bfb5e38082222c22696d616765223a22697066733a2f2f62616679626569657277717777746a3777796e6a617564326a776935796a7866716e6e74687678666b7936367375696835776c706a756f66766579222c2262616e6e65725f696d616765223a22222c2266656174757265645f696d616765223a22222c2265787465726e616c5f6c696e6b223a2268747470733a2f2f6269742e6c792f6d6f6e657976657273652d706466222c22636f6c6c61626f7261746f7273223a5b5d7d00000000000000000000000000000000000000000000000000000000000000"),
			BlockNumber: 6,
			TxHash:      common.HexToHash("0xb6d36e43ff896ce583714a5fb946fc9c54f31c43712a1937fa28f6b3af526b9c"),
			TxIndex:     0,
			BlockHash:   common.HexToHash("0xd5e5c66d5c0173a636438d320944f22017ccfe1e8272be65d8be1cdc7d97e04a"),
			Index:       1,
			Removed:     false,
		}

		newBookNFT := new(like_protocol.LikeProtocolNewBookNFT)
		err = logConverter.UnpackLog(log, newBookNFT)

		So(err, ShouldBeNil)
		So(newBookNFT.BookNFT.Hex(), ShouldEqual, "0x14CE6632272552E676b53FE6202edA8F1Be4992c")
		So(newBookNFT.Config.MaxSupply, ShouldEqual, 0)
		So(newBookNFT.Config.Metadata, ShouldEqual, `{"name":"《所謂「我不投資」，就是 all in 在法定貨幣》","symbol":"BOOK","description":"購買本書會透過郵件收到 epub 和 pdf 檔，同時得到換領本書 NFT 的資格。書的 epub 和 pdf 歡迎轉發給朋友，讓更多人獲得相關知識。有別於粵語中「翻版」的原意，「翻版」不是「盜版」，並不違法。\n然而，翻版雖然不是盜版，卻也不是正版。唯有 NFT 的持有者，手上的 epub 和 pdf 才是正版。購買正版是一份美德，是能力所及的讀者該付出的一點承擔，代表著對作者的支持，對知識、報道和創作的尊重。\n翻版是傳播，正版是應援；傳播的同時，不要忘了鼓勵對方購買正版，讓正念 pay it forward。\n鼓勵正版，允許翻版，消滅盜版，是《所謂「我不投資」，就是 all in 在法定貨幣》分散式出版的核心理念。","image":"ipfs://bafybeierwqwwtj7wynjaud2jwi5yjxfqnnthvxfky66suih5wlpjuofvey","banner_image":"","featured_image":"","external_link":"https://bit.ly/moneyverse-pdf","collaborators":[]}`)
		So(newBookNFT.Config.Name, ShouldEqual, "《所謂「我不投資」，就是 all in 在法定貨幣》")
		So(newBookNFT.Config.Symbol, ShouldEqual, "BOOK")
	})

	Convey("Parse TransferWithMemo Log", t, func() {
		abi, err := book_nft.BookNftMetaData.GetAbi()

		if err != nil {
			t.Error(err)
		}

		logConverter := logconverter.NewLogConverter(abi)

		log := types.Log{
			Address: common.HexToAddress("0x14CE6632272552E676b53FE6202edA8F1Be4992c"),
			Topics: []common.Hash{
				common.HexToHash("0xbd5c95affecf80a51b513bb4eddd42724421b80ef31b07cee1b5b25d8ce5a05b"),
				common.HexToHash("0x0000000000000000000000008626f6940e2eb28930efb4cef49b2d1f2c9c1199"),
				common.HexToHash("0x0000000000000000000000008626f6940e2eb28930efb4cef49b2d1f2c9c1199"),
				common.HexToHash("0x0000000000000000000000000000000000000000000000000000000000000000"),
			},
			Data:        hexutil.MustDecode("0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000055f6d696e74000000000000000000000000000000000000000000000000000000"),
			BlockNumber: 6,
			TxHash:      common.HexToHash("0xb02c18cc9b9ac0bc1bbe3e72bf8e412661ed129aff58b357b3bbaf79c68a0fd1"),
			TxIndex:     0,
			BlockHash:   common.HexToHash("0x7185a8946828faef81be06839b85156efc3e7b5eda36763f6d9e2ec75caba968"),
			Index:       1,
			Removed:     false,
		}

		transferWithMemo := new(book_nft.BookNftTransferWithMemo)
		err = logConverter.UnpackLog(log, transferWithMemo)

		So(err, ShouldBeNil)
		So(transferWithMemo.From.Hex(), ShouldEqual, "0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199")
		So(transferWithMemo.To.Hex(), ShouldEqual, "0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199")
		So(transferWithMemo.TokenId.String(), ShouldEqual, "0")
		So(transferWithMemo.Memo, ShouldEqual, "_mint")
	})

	Convey("Parse ContractURIUpdated Log", t, func() {
		abi, err := book_nft.BookNftMetaData.GetAbi()

		if err != nil {
			t.Error(err)
		}

		logConverter := logconverter.NewLogConverter(abi)

		log := types.Log{
			Address: common.HexToAddress("0x14CE6632272552E676b53FE6202edA8F1Be4992c"),
			Topics: []common.Hash{
				common.HexToHash("0xa5d4097edda6d87cb9329af83fb3712ef77eeb13738ffe43cc35a4ce305ad962"),
			},
			Data:        nil,
			BlockNumber: 6,
			TxHash:      common.HexToHash("0x2a6b93f314b534762962421ee7f298d0a0c006518ded5328193bd17b27aa432b"),
			TxIndex:     0,
			BlockHash:   common.HexToHash("0xbdf8f66b8d38eb2674e242c43ea61c40ae7f0805a8c872355d87c5d0f36fe152"),
			Index:       1,
			Removed:     false,
		}

		contractURIUpdated := new(book_nft.BookNftContractURIUpdated)
		err = logConverter.UnpackLog(log, contractURIUpdated)

		So(err, ShouldBeNil)
	})

	Convey("Parse OwnershipTransferred Log", t, func() {
		abi, err := book_nft.BookNftMetaData.GetAbi()

		if err != nil {
			t.Error(err)
		}

		logConverter := logconverter.NewLogConverter(abi)

		log := types.Log{
			Address: common.HexToAddress("0x14CE6632272552E676b53FE6202edA8F1Be4992c"),
			Topics: []common.Hash{
				common.HexToHash("0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"),
				common.HexToHash("0x0000000000000000000000008626f6940e2eb28930efb4cef49b2d1f2c9c1199"),
				common.HexToHash("0x000000000000000000000000dd2fd4581271e230360230f9337d5c0430bf44c0"),
			},
			Data:        nil,
			BlockNumber: 6,
			TxHash:      common.HexToHash("0xd25171beed603fb18a13636a8a24b0a6e843ec2937b3abd8d295e0f4fd9a1833"),
			TxIndex:     0,
			BlockHash:   common.HexToHash("0x2b7c406b6d84baca7e14d35cdbd7728e63622729f5ab736290a990ed9a09f41e"),
			Index:       1,
			Removed:     false,
		}

		ownershipTransferred := new(book_nft.BookNftOwnershipTransferred)
		err = logConverter.UnpackLog(log, ownershipTransferred)

		So(err, ShouldBeNil)
		So(ownershipTransferred.NewOwner.Hex(), ShouldEqual, "0xdD2FD4581271e230360230F9337D5c0430Bf44C0")
		So(ownershipTransferred.PreviousOwner.Hex(), ShouldEqual, "0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199")
	})
}
