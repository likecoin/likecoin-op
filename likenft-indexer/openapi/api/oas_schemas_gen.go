// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"time"

	"github.com/go-faster/errors"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/Account
type Account struct {
	ID            int       `json:"id"`
	CosmosAddress OptString `json:"cosmos_address"`
	EvmAddress    string    `json:"evm_address"`
	Likeid        OptString `json:"likeid"`
}

// GetID returns the value of ID.
func (s *Account) GetID() int {
	return s.ID
}

// GetCosmosAddress returns the value of CosmosAddress.
func (s *Account) GetCosmosAddress() OptString {
	return s.CosmosAddress
}

// GetEvmAddress returns the value of EvmAddress.
func (s *Account) GetEvmAddress() string {
	return s.EvmAddress
}

// GetLikeid returns the value of Likeid.
func (s *Account) GetLikeid() OptString {
	return s.Likeid
}

// SetID sets the value of ID.
func (s *Account) SetID(val int) {
	s.ID = val
}

// SetCosmosAddress sets the value of CosmosAddress.
func (s *Account) SetCosmosAddress(val OptString) {
	s.CosmosAddress = val
}

// SetEvmAddress sets the value of EvmAddress.
func (s *Account) SetEvmAddress(val string) {
	s.EvmAddress = val
}

// SetLikeid sets the value of Likeid.
func (s *Account) SetLikeid(val OptString) {
	s.Likeid = val
}

type AccountByBookNFTOK struct {
	Account Account `json:"account"`
}

// GetAccount returns the value of Account.
func (s *AccountByBookNFTOK) GetAccount() Account {
	return s.Account
}

// SetAccount sets the value of Account.
func (s *AccountByBookNFTOK) SetAccount(val Account) {
	s.Account = val
}

type BigInt string

// Ref: #/components/schemas/BookNFT
type BookNFT struct {
	ID                  int                      `json:"id"`
	Address             string                   `json:"address"`
	Name                string                   `json:"name"`
	Symbol              string                   `json:"symbol"`
	OwnerAddress        OptString                `json:"owner_address"`
	TotalSupply         BigInt                   `json:"total_supply"`
	MaxSupply           Uint64                   `json:"max_supply"`
	Metadata            OptContractLevelMetadata `json:"metadata"`
	BannerImage         string                   `json:"banner_image"`
	FeaturedImage       string                   `json:"featured_image"`
	DeployerAddress     string                   `json:"deployer_address"`
	DeployedBlockNumber Uint64                   `json:"deployed_block_number"`
	MintedAt            time.Time                `json:"minted_at"`
	UpdatedAt           time.Time                `json:"updated_at"`
	Owner               OptAccount               `json:"owner"`
}

// GetID returns the value of ID.
func (s *BookNFT) GetID() int {
	return s.ID
}

// GetAddress returns the value of Address.
func (s *BookNFT) GetAddress() string {
	return s.Address
}

// GetName returns the value of Name.
func (s *BookNFT) GetName() string {
	return s.Name
}

// GetSymbol returns the value of Symbol.
func (s *BookNFT) GetSymbol() string {
	return s.Symbol
}

// GetOwnerAddress returns the value of OwnerAddress.
func (s *BookNFT) GetOwnerAddress() OptString {
	return s.OwnerAddress
}

// GetTotalSupply returns the value of TotalSupply.
func (s *BookNFT) GetTotalSupply() BigInt {
	return s.TotalSupply
}

// GetMaxSupply returns the value of MaxSupply.
func (s *BookNFT) GetMaxSupply() Uint64 {
	return s.MaxSupply
}

// GetMetadata returns the value of Metadata.
func (s *BookNFT) GetMetadata() OptContractLevelMetadata {
	return s.Metadata
}

// GetBannerImage returns the value of BannerImage.
func (s *BookNFT) GetBannerImage() string {
	return s.BannerImage
}

// GetFeaturedImage returns the value of FeaturedImage.
func (s *BookNFT) GetFeaturedImage() string {
	return s.FeaturedImage
}

// GetDeployerAddress returns the value of DeployerAddress.
func (s *BookNFT) GetDeployerAddress() string {
	return s.DeployerAddress
}

// GetDeployedBlockNumber returns the value of DeployedBlockNumber.
func (s *BookNFT) GetDeployedBlockNumber() Uint64 {
	return s.DeployedBlockNumber
}

// GetMintedAt returns the value of MintedAt.
func (s *BookNFT) GetMintedAt() time.Time {
	return s.MintedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *BookNFT) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetOwner returns the value of Owner.
func (s *BookNFT) GetOwner() OptAccount {
	return s.Owner
}

// SetID sets the value of ID.
func (s *BookNFT) SetID(val int) {
	s.ID = val
}

// SetAddress sets the value of Address.
func (s *BookNFT) SetAddress(val string) {
	s.Address = val
}

// SetName sets the value of Name.
func (s *BookNFT) SetName(val string) {
	s.Name = val
}

// SetSymbol sets the value of Symbol.
func (s *BookNFT) SetSymbol(val string) {
	s.Symbol = val
}

// SetOwnerAddress sets the value of OwnerAddress.
func (s *BookNFT) SetOwnerAddress(val OptString) {
	s.OwnerAddress = val
}

// SetTotalSupply sets the value of TotalSupply.
func (s *BookNFT) SetTotalSupply(val BigInt) {
	s.TotalSupply = val
}

// SetMaxSupply sets the value of MaxSupply.
func (s *BookNFT) SetMaxSupply(val Uint64) {
	s.MaxSupply = val
}

// SetMetadata sets the value of Metadata.
func (s *BookNFT) SetMetadata(val OptContractLevelMetadata) {
	s.Metadata = val
}

// SetBannerImage sets the value of BannerImage.
func (s *BookNFT) SetBannerImage(val string) {
	s.BannerImage = val
}

// SetFeaturedImage sets the value of FeaturedImage.
func (s *BookNFT) SetFeaturedImage(val string) {
	s.FeaturedImage = val
}

// SetDeployerAddress sets the value of DeployerAddress.
func (s *BookNFT) SetDeployerAddress(val string) {
	s.DeployerAddress = val
}

// SetDeployedBlockNumber sets the value of DeployedBlockNumber.
func (s *BookNFT) SetDeployedBlockNumber(val Uint64) {
	s.DeployedBlockNumber = val
}

// SetMintedAt sets the value of MintedAt.
func (s *BookNFT) SetMintedAt(val time.Time) {
	s.MintedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *BookNFT) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetOwner sets the value of Owner.
func (s *BookNFT) SetOwner(val OptAccount) {
	s.Owner = val
}

type BookNFTsByAccountOK struct {
	Pagination PaginationResponse `json:"pagination"`
	Data       []BookNFT          `json:"data"`
}

// GetPagination returns the value of Pagination.
func (s *BookNFTsByAccountOK) GetPagination() PaginationResponse {
	return s.Pagination
}

// GetData returns the value of Data.
func (s *BookNFTsByAccountOK) GetData() []BookNFT {
	return s.Data
}

// SetPagination sets the value of Pagination.
func (s *BookNFTsByAccountOK) SetPagination(val PaginationResponse) {
	s.Pagination = val
}

// SetData sets the value of Data.
func (s *BookNFTsByAccountOK) SetData(val []BookNFT) {
	s.Data = val
}

type BookNFTsOK struct {
	Pagination PaginationResponse `json:"pagination"`
	Data       []BookNFT          `json:"data"`
}

// GetPagination returns the value of Pagination.
func (s *BookNFTsOK) GetPagination() PaginationResponse {
	return s.Pagination
}

// GetData returns the value of Data.
func (s *BookNFTsOK) GetData() []BookNFT {
	return s.Data
}

// SetPagination sets the value of Pagination.
func (s *BookNFTsOK) SetPagination(val PaginationResponse) {
	s.Pagination = val
}

// SetData sets the value of Data.
func (s *BookNFTsOK) SetData(val []BookNFT) {
	s.Data = val
}

// Ref: #/components/schemas/ContractLevelMetadata
type ContractLevelMetadata struct {
	Name          OptString `json:"name"`
	Symbol        OptString `json:"symbol"`
	Description   OptString `json:"description"`
	Image         OptString `json:"image"`
	BannerImage   OptString `json:"banner_image"`
	FeaturedImage OptString `json:"featured_image"`
	ExternalLink  OptString `json:"external_link"`
	Collaborators []string  `json:"collaborators"`
}

// GetName returns the value of Name.
func (s *ContractLevelMetadata) GetName() OptString {
	return s.Name
}

// GetSymbol returns the value of Symbol.
func (s *ContractLevelMetadata) GetSymbol() OptString {
	return s.Symbol
}

// GetDescription returns the value of Description.
func (s *ContractLevelMetadata) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *ContractLevelMetadata) GetImage() OptString {
	return s.Image
}

// GetBannerImage returns the value of BannerImage.
func (s *ContractLevelMetadata) GetBannerImage() OptString {
	return s.BannerImage
}

// GetFeaturedImage returns the value of FeaturedImage.
func (s *ContractLevelMetadata) GetFeaturedImage() OptString {
	return s.FeaturedImage
}

// GetExternalLink returns the value of ExternalLink.
func (s *ContractLevelMetadata) GetExternalLink() OptString {
	return s.ExternalLink
}

// GetCollaborators returns the value of Collaborators.
func (s *ContractLevelMetadata) GetCollaborators() []string {
	return s.Collaborators
}

// SetName sets the value of Name.
func (s *ContractLevelMetadata) SetName(val OptString) {
	s.Name = val
}

// SetSymbol sets the value of Symbol.
func (s *ContractLevelMetadata) SetSymbol(val OptString) {
	s.Symbol = val
}

// SetDescription sets the value of Description.
func (s *ContractLevelMetadata) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *ContractLevelMetadata) SetImage(val OptString) {
	s.Image = val
}

// SetBannerImage sets the value of BannerImage.
func (s *ContractLevelMetadata) SetBannerImage(val OptString) {
	s.BannerImage = val
}

// SetFeaturedImage sets the value of FeaturedImage.
func (s *ContractLevelMetadata) SetFeaturedImage(val OptString) {
	s.FeaturedImage = val
}

// SetExternalLink sets the value of ExternalLink.
func (s *ContractLevelMetadata) SetExternalLink(val OptString) {
	s.ExternalLink = val
}

// SetCollaborators sets the value of Collaborators.
func (s *ContractLevelMetadata) SetCollaborators(val []string) {
	s.Collaborators = val
}

// Ref: #/components/schemas/Erc721MetadataAttribute
type Erc721MetadataAttribute struct {
	DisplayType OptErc721MetadataAttributeDisplayType `json:"display_type"`
	TraitType   string                                `json:"trait_type"`
	Value       string                                `json:"value"`
}

// GetDisplayType returns the value of DisplayType.
func (s *Erc721MetadataAttribute) GetDisplayType() OptErc721MetadataAttributeDisplayType {
	return s.DisplayType
}

// GetTraitType returns the value of TraitType.
func (s *Erc721MetadataAttribute) GetTraitType() string {
	return s.TraitType
}

// GetValue returns the value of Value.
func (s *Erc721MetadataAttribute) GetValue() string {
	return s.Value
}

// SetDisplayType sets the value of DisplayType.
func (s *Erc721MetadataAttribute) SetDisplayType(val OptErc721MetadataAttributeDisplayType) {
	s.DisplayType = val
}

// SetTraitType sets the value of TraitType.
func (s *Erc721MetadataAttribute) SetTraitType(val string) {
	s.TraitType = val
}

// SetValue sets the value of Value.
func (s *Erc721MetadataAttribute) SetValue(val string) {
	s.Value = val
}

type Erc721MetadataAttributeDisplayType string

const (
	Erc721MetadataAttributeDisplayTypeNumber          Erc721MetadataAttributeDisplayType = "number"
	Erc721MetadataAttributeDisplayTypeBoostNumber     Erc721MetadataAttributeDisplayType = "boost_number"
	Erc721MetadataAttributeDisplayTypeBoostPercentage Erc721MetadataAttributeDisplayType = "boost_percentage"
)

// AllValues returns all Erc721MetadataAttributeDisplayType values.
func (Erc721MetadataAttributeDisplayType) AllValues() []Erc721MetadataAttributeDisplayType {
	return []Erc721MetadataAttributeDisplayType{
		Erc721MetadataAttributeDisplayTypeNumber,
		Erc721MetadataAttributeDisplayTypeBoostNumber,
		Erc721MetadataAttributeDisplayTypeBoostPercentage,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Erc721MetadataAttributeDisplayType) MarshalText() ([]byte, error) {
	switch s {
	case Erc721MetadataAttributeDisplayTypeNumber:
		return []byte(s), nil
	case Erc721MetadataAttributeDisplayTypeBoostNumber:
		return []byte(s), nil
	case Erc721MetadataAttributeDisplayTypeBoostPercentage:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Erc721MetadataAttributeDisplayType) UnmarshalText(data []byte) error {
	switch Erc721MetadataAttributeDisplayType(data) {
	case Erc721MetadataAttributeDisplayTypeNumber:
		*s = Erc721MetadataAttributeDisplayTypeNumber
		return nil
	case Erc721MetadataAttributeDisplayTypeBoostNumber:
		*s = Erc721MetadataAttributeDisplayTypeBoostNumber
		return nil
	case Erc721MetadataAttributeDisplayTypeBoostPercentage:
		*s = Erc721MetadataAttributeDisplayTypeBoostPercentage
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Represents error object.
// Ref: #/components/schemas/Error
type Error struct {
	Code    int64  `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() int64 {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val int64) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// Ref: #/components/schemas/Event
type Event struct {
	ChainID          int          `json:"chain_id"`
	BlockNumber      string       `json:"block_number"`
	BlockHash        string       `json:"block_hash"`
	BlockTimestamp   string       `json:"block_timestamp"`
	TransactionHash  string       `json:"transaction_hash"`
	TransactionIndex int          `json:"transaction_index"`
	LogIndex         int          `json:"log_index"`
	Address          string       `json:"address"`
	Data             string       `json:"data"`
	Topics           []string     `json:"topics"`
	Decoded          EventDecoded `json:"decoded"`
}

// GetChainID returns the value of ChainID.
func (s *Event) GetChainID() int {
	return s.ChainID
}

// GetBlockNumber returns the value of BlockNumber.
func (s *Event) GetBlockNumber() string {
	return s.BlockNumber
}

// GetBlockHash returns the value of BlockHash.
func (s *Event) GetBlockHash() string {
	return s.BlockHash
}

// GetBlockTimestamp returns the value of BlockTimestamp.
func (s *Event) GetBlockTimestamp() string {
	return s.BlockTimestamp
}

// GetTransactionHash returns the value of TransactionHash.
func (s *Event) GetTransactionHash() string {
	return s.TransactionHash
}

// GetTransactionIndex returns the value of TransactionIndex.
func (s *Event) GetTransactionIndex() int {
	return s.TransactionIndex
}

// GetLogIndex returns the value of LogIndex.
func (s *Event) GetLogIndex() int {
	return s.LogIndex
}

// GetAddress returns the value of Address.
func (s *Event) GetAddress() string {
	return s.Address
}

// GetData returns the value of Data.
func (s *Event) GetData() string {
	return s.Data
}

// GetTopics returns the value of Topics.
func (s *Event) GetTopics() []string {
	return s.Topics
}

// GetDecoded returns the value of Decoded.
func (s *Event) GetDecoded() EventDecoded {
	return s.Decoded
}

// SetChainID sets the value of ChainID.
func (s *Event) SetChainID(val int) {
	s.ChainID = val
}

// SetBlockNumber sets the value of BlockNumber.
func (s *Event) SetBlockNumber(val string) {
	s.BlockNumber = val
}

// SetBlockHash sets the value of BlockHash.
func (s *Event) SetBlockHash(val string) {
	s.BlockHash = val
}

// SetBlockTimestamp sets the value of BlockTimestamp.
func (s *Event) SetBlockTimestamp(val string) {
	s.BlockTimestamp = val
}

// SetTransactionHash sets the value of TransactionHash.
func (s *Event) SetTransactionHash(val string) {
	s.TransactionHash = val
}

// SetTransactionIndex sets the value of TransactionIndex.
func (s *Event) SetTransactionIndex(val int) {
	s.TransactionIndex = val
}

// SetLogIndex sets the value of LogIndex.
func (s *Event) SetLogIndex(val int) {
	s.LogIndex = val
}

// SetAddress sets the value of Address.
func (s *Event) SetAddress(val string) {
	s.Address = val
}

// SetData sets the value of Data.
func (s *Event) SetData(val string) {
	s.Data = val
}

// SetTopics sets the value of Topics.
func (s *Event) SetTopics(val []string) {
	s.Topics = val
}

// SetDecoded sets the value of Decoded.
func (s *Event) SetDecoded(val EventDecoded) {
	s.Decoded = val
}

type EventDecoded struct {
	Name             string                       `json:"name"`
	Signature        string                       `json:"signature"`
	IndexedParams    EventDecodedIndexedParams    `json:"indexed_params"`
	NonIndexedParams EventDecodedNonIndexedParams `json:"non_indexed_params"`
}

// GetName returns the value of Name.
func (s *EventDecoded) GetName() string {
	return s.Name
}

// GetSignature returns the value of Signature.
func (s *EventDecoded) GetSignature() string {
	return s.Signature
}

// GetIndexedParams returns the value of IndexedParams.
func (s *EventDecoded) GetIndexedParams() EventDecodedIndexedParams {
	return s.IndexedParams
}

// GetNonIndexedParams returns the value of NonIndexedParams.
func (s *EventDecoded) GetNonIndexedParams() EventDecodedNonIndexedParams {
	return s.NonIndexedParams
}

// SetName sets the value of Name.
func (s *EventDecoded) SetName(val string) {
	s.Name = val
}

// SetSignature sets the value of Signature.
func (s *EventDecoded) SetSignature(val string) {
	s.Signature = val
}

// SetIndexedParams sets the value of IndexedParams.
func (s *EventDecoded) SetIndexedParams(val EventDecodedIndexedParams) {
	s.IndexedParams = val
}

// SetNonIndexedParams sets the value of NonIndexedParams.
func (s *EventDecoded) SetNonIndexedParams(val EventDecodedNonIndexedParams) {
	s.NonIndexedParams = val
}

type EventDecodedIndexedParams struct{}

type EventDecodedNonIndexedParams struct{}

// Ref: #/components/schemas/EventQueryMetadata
type EventQueryMetadata struct {
	ChainIds      []int  `json:"chain_ids"`
	Address       string `json:"address"`
	Signature     string `json:"signature"`
	Page          int    `json:"page"`
	LimitPerChain int    `json:"limit_per_chain"`
	TotalItems    int    `json:"total_items"`
	TotalPages    int    `json:"total_pages"`
}

// GetChainIds returns the value of ChainIds.
func (s *EventQueryMetadata) GetChainIds() []int {
	return s.ChainIds
}

// GetAddress returns the value of Address.
func (s *EventQueryMetadata) GetAddress() string {
	return s.Address
}

// GetSignature returns the value of Signature.
func (s *EventQueryMetadata) GetSignature() string {
	return s.Signature
}

// GetPage returns the value of Page.
func (s *EventQueryMetadata) GetPage() int {
	return s.Page
}

// GetLimitPerChain returns the value of LimitPerChain.
func (s *EventQueryMetadata) GetLimitPerChain() int {
	return s.LimitPerChain
}

// GetTotalItems returns the value of TotalItems.
func (s *EventQueryMetadata) GetTotalItems() int {
	return s.TotalItems
}

// GetTotalPages returns the value of TotalPages.
func (s *EventQueryMetadata) GetTotalPages() int {
	return s.TotalPages
}

// SetChainIds sets the value of ChainIds.
func (s *EventQueryMetadata) SetChainIds(val []int) {
	s.ChainIds = val
}

// SetAddress sets the value of Address.
func (s *EventQueryMetadata) SetAddress(val string) {
	s.Address = val
}

// SetSignature sets the value of Signature.
func (s *EventQueryMetadata) SetSignature(val string) {
	s.Signature = val
}

// SetPage sets the value of Page.
func (s *EventQueryMetadata) SetPage(val int) {
	s.Page = val
}

// SetLimitPerChain sets the value of LimitPerChain.
func (s *EventQueryMetadata) SetLimitPerChain(val int) {
	s.LimitPerChain = val
}

// SetTotalItems sets the value of TotalItems.
func (s *EventQueryMetadata) SetTotalItems(val int) {
	s.TotalItems = val
}

// SetTotalPages sets the value of TotalPages.
func (s *EventQueryMetadata) SetTotalPages(val int) {
	s.TotalPages = val
}

type EventsByAddressAndSignatureOK struct {
	Meta EventQueryMetadata `json:"meta"`
	Data []Event            `json:"data"`
}

// GetMeta returns the value of Meta.
func (s *EventsByAddressAndSignatureOK) GetMeta() EventQueryMetadata {
	return s.Meta
}

// GetData returns the value of Data.
func (s *EventsByAddressAndSignatureOK) GetData() []Event {
	return s.Data
}

// SetMeta sets the value of Meta.
func (s *EventsByAddressAndSignatureOK) SetMeta(val EventQueryMetadata) {
	s.Meta = val
}

// SetData sets the value of Data.
func (s *EventsByAddressAndSignatureOK) SetData(val []Event) {
	s.Data = val
}

type EventsByAddressOK struct {
	Meta EventQueryMetadata `json:"meta"`
	Data []Event            `json:"data"`
}

// GetMeta returns the value of Meta.
func (s *EventsByAddressOK) GetMeta() EventQueryMetadata {
	return s.Meta
}

// GetData returns the value of Data.
func (s *EventsByAddressOK) GetData() []Event {
	return s.Data
}

// SetMeta sets the value of Meta.
func (s *EventsByAddressOK) SetMeta(val EventQueryMetadata) {
	s.Meta = val
}

// SetData sets the value of Data.
func (s *EventsByAddressOK) SetData(val []Event) {
	s.Data = val
}

type EventsOK struct {
	Meta EventQueryMetadata `json:"meta"`
	Data []Event            `json:"data"`
}

// GetMeta returns the value of Meta.
func (s *EventsOK) GetMeta() EventQueryMetadata {
	return s.Meta
}

// GetData returns the value of Data.
func (s *EventsOK) GetData() []Event {
	return s.Data
}

// SetMeta sets the value of Meta.
func (s *EventsOK) SetMeta(val EventQueryMetadata) {
	s.Meta = val
}

// SetData sets the value of Data.
func (s *EventsOK) SetData(val []Event) {
	s.Data = val
}

// Ref: #/components/schemas/NFT
type NFT struct {
	ID              int                       `json:"id"`
	ContractAddress string                    `json:"contract_address"`
	TokenID         Uint64                    `json:"token_id"`
	TokenURI        OptString                 `json:"token_uri"`
	Image           OptString                 `json:"image"`
	ImageData       OptString                 `json:"image_data"`
	ExternalURL     OptString                 `json:"external_url"`
	Description     OptString                 `json:"description"`
	Name            OptString                 `json:"name"`
	Attributes      []Erc721MetadataAttribute `json:"attributes"`
	BackgroundColor OptString                 `json:"background_color"`
	AnimationURL    OptString                 `json:"animation_url"`
	YoutubeURL      OptString                 `json:"youtube_url"`
	OwnerAddress    string                    `json:"owner_address"`
	MintedAt        time.Time                 `json:"minted_at"`
	UpdatedAt       time.Time                 `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *NFT) GetID() int {
	return s.ID
}

// GetContractAddress returns the value of ContractAddress.
func (s *NFT) GetContractAddress() string {
	return s.ContractAddress
}

// GetTokenID returns the value of TokenID.
func (s *NFT) GetTokenID() Uint64 {
	return s.TokenID
}

// GetTokenURI returns the value of TokenURI.
func (s *NFT) GetTokenURI() OptString {
	return s.TokenURI
}

// GetImage returns the value of Image.
func (s *NFT) GetImage() OptString {
	return s.Image
}

// GetImageData returns the value of ImageData.
func (s *NFT) GetImageData() OptString {
	return s.ImageData
}

// GetExternalURL returns the value of ExternalURL.
func (s *NFT) GetExternalURL() OptString {
	return s.ExternalURL
}

// GetDescription returns the value of Description.
func (s *NFT) GetDescription() OptString {
	return s.Description
}

// GetName returns the value of Name.
func (s *NFT) GetName() OptString {
	return s.Name
}

// GetAttributes returns the value of Attributes.
func (s *NFT) GetAttributes() []Erc721MetadataAttribute {
	return s.Attributes
}

// GetBackgroundColor returns the value of BackgroundColor.
func (s *NFT) GetBackgroundColor() OptString {
	return s.BackgroundColor
}

// GetAnimationURL returns the value of AnimationURL.
func (s *NFT) GetAnimationURL() OptString {
	return s.AnimationURL
}

// GetYoutubeURL returns the value of YoutubeURL.
func (s *NFT) GetYoutubeURL() OptString {
	return s.YoutubeURL
}

// GetOwnerAddress returns the value of OwnerAddress.
func (s *NFT) GetOwnerAddress() string {
	return s.OwnerAddress
}

// GetMintedAt returns the value of MintedAt.
func (s *NFT) GetMintedAt() time.Time {
	return s.MintedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *NFT) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *NFT) SetID(val int) {
	s.ID = val
}

// SetContractAddress sets the value of ContractAddress.
func (s *NFT) SetContractAddress(val string) {
	s.ContractAddress = val
}

// SetTokenID sets the value of TokenID.
func (s *NFT) SetTokenID(val Uint64) {
	s.TokenID = val
}

// SetTokenURI sets the value of TokenURI.
func (s *NFT) SetTokenURI(val OptString) {
	s.TokenURI = val
}

// SetImage sets the value of Image.
func (s *NFT) SetImage(val OptString) {
	s.Image = val
}

// SetImageData sets the value of ImageData.
func (s *NFT) SetImageData(val OptString) {
	s.ImageData = val
}

// SetExternalURL sets the value of ExternalURL.
func (s *NFT) SetExternalURL(val OptString) {
	s.ExternalURL = val
}

// SetDescription sets the value of Description.
func (s *NFT) SetDescription(val OptString) {
	s.Description = val
}

// SetName sets the value of Name.
func (s *NFT) SetName(val OptString) {
	s.Name = val
}

// SetAttributes sets the value of Attributes.
func (s *NFT) SetAttributes(val []Erc721MetadataAttribute) {
	s.Attributes = val
}

// SetBackgroundColor sets the value of BackgroundColor.
func (s *NFT) SetBackgroundColor(val OptString) {
	s.BackgroundColor = val
}

// SetAnimationURL sets the value of AnimationURL.
func (s *NFT) SetAnimationURL(val OptString) {
	s.AnimationURL = val
}

// SetYoutubeURL sets the value of YoutubeURL.
func (s *NFT) SetYoutubeURL(val OptString) {
	s.YoutubeURL = val
}

// SetOwnerAddress sets the value of OwnerAddress.
func (s *NFT) SetOwnerAddress(val string) {
	s.OwnerAddress = val
}

// SetMintedAt sets the value of MintedAt.
func (s *NFT) SetMintedAt(val time.Time) {
	s.MintedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *NFT) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// NewOptAccount returns new OptAccount with value set to v.
func NewOptAccount(v Account) OptAccount {
	return OptAccount{
		Value: v,
		Set:   true,
	}
}

// OptAccount is optional Account.
type OptAccount struct {
	Value Account
	Set   bool
}

// IsSet returns true if OptAccount was set.
func (o OptAccount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccount) Reset() {
	var v Account
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccount) SetTo(v Account) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccount) Get() (v Account, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccount) Or(d Account) Account {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptContractLevelMetadata returns new OptContractLevelMetadata with value set to v.
func NewOptContractLevelMetadata(v ContractLevelMetadata) OptContractLevelMetadata {
	return OptContractLevelMetadata{
		Value: v,
		Set:   true,
	}
}

// OptContractLevelMetadata is optional ContractLevelMetadata.
type OptContractLevelMetadata struct {
	Value ContractLevelMetadata
	Set   bool
}

// IsSet returns true if OptContractLevelMetadata was set.
func (o OptContractLevelMetadata) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContractLevelMetadata) Reset() {
	var v ContractLevelMetadata
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContractLevelMetadata) SetTo(v ContractLevelMetadata) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContractLevelMetadata) Get() (v ContractLevelMetadata, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptContractLevelMetadata) Or(d ContractLevelMetadata) ContractLevelMetadata {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptErc721MetadataAttributeDisplayType returns new OptErc721MetadataAttributeDisplayType with value set to v.
func NewOptErc721MetadataAttributeDisplayType(v Erc721MetadataAttributeDisplayType) OptErc721MetadataAttributeDisplayType {
	return OptErc721MetadataAttributeDisplayType{
		Value: v,
		Set:   true,
	}
}

// OptErc721MetadataAttributeDisplayType is optional Erc721MetadataAttributeDisplayType.
type OptErc721MetadataAttributeDisplayType struct {
	Value Erc721MetadataAttributeDisplayType
	Set   bool
}

// IsSet returns true if OptErc721MetadataAttributeDisplayType was set.
func (o OptErc721MetadataAttributeDisplayType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptErc721MetadataAttributeDisplayType) Reset() {
	var v Erc721MetadataAttributeDisplayType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptErc721MetadataAttributeDisplayType) SetTo(v Erc721MetadataAttributeDisplayType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptErc721MetadataAttributeDisplayType) Get() (v Erc721MetadataAttributeDisplayType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptErc721MetadataAttributeDisplayType) Or(d Erc721MetadataAttributeDisplayType) Erc721MetadataAttributeDisplayType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PaginationResponse
type PaginationResponse struct {
	NextKey int `json:"next_key"`
	Count   int `json:"count"`
}

// GetNextKey returns the value of NextKey.
func (s *PaginationResponse) GetNextKey() int {
	return s.NextKey
}

// GetCount returns the value of Count.
func (s *PaginationResponse) GetCount() int {
	return s.Count
}

// SetNextKey sets the value of NextKey.
func (s *PaginationResponse) SetNextKey(val int) {
	s.NextKey = val
}

// SetCount sets the value of Count.
func (s *PaginationResponse) SetCount(val int) {
	s.Count = val
}

type TokensByAccountOK struct {
	Pagination PaginationResponse `json:"pagination"`
	Data       []NFT              `json:"data"`
}

// GetPagination returns the value of Pagination.
func (s *TokensByAccountOK) GetPagination() PaginationResponse {
	return s.Pagination
}

// GetData returns the value of Data.
func (s *TokensByAccountOK) GetData() []NFT {
	return s.Data
}

// SetPagination sets the value of Pagination.
func (s *TokensByAccountOK) SetPagination(val PaginationResponse) {
	s.Pagination = val
}

// SetData sets the value of Data.
func (s *TokensByAccountOK) SetData(val []NFT) {
	s.Data = val
}

type TokensByBookNFTOK struct {
	Pagination PaginationResponse `json:"pagination"`
	Data       []NFT              `json:"data"`
}

// GetPagination returns the value of Pagination.
func (s *TokensByBookNFTOK) GetPagination() PaginationResponse {
	return s.Pagination
}

// GetData returns the value of Data.
func (s *TokensByBookNFTOK) GetData() []NFT {
	return s.Data
}

// SetPagination sets the value of Pagination.
func (s *TokensByBookNFTOK) SetPagination(val PaginationResponse) {
	s.Pagination = val
}

// SetData sets the value of Data.
func (s *TokensByBookNFTOK) SetData(val []NFT) {
	s.Data = val
}

type Uint64 string
