// Code generated by ent, DO NOT EDIT.

package predicate

import (
	"entgo.io/ent/dialect/sql"
)

// StakingEvent is the predicate function for stakingevent builders.
type StakingEvent func(*sql.Selector)

// StakingEventOrErr calls the predicate only if the error is not nit.
func StakingEventOrErr(p StakingEvent, err error) StakingEvent {
	return func(s *sql.Selector) {
		if err != nil {
			s.AddError(err)
			return
		}
		p(s)
	}
}

// StakingEventsHyperTable is the predicate function for stakingeventshypertable builders.
type StakingEventsHyperTable func(*sql.Selector)

// StakingEventsHyperTableOrErr calls the predicate only if the error is not nit.
func StakingEventsHyperTableOrErr(p StakingEventsHyperTable, err error) StakingEventsHyperTable {
	return func(s *sql.Selector) {
		if err != nil {
			s.AddError(err)
			return
		}
		p(s)
	}
}
